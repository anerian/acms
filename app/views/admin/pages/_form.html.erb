<% content_for :head do %>
  <%= stylesheet_link_tag 'admin/editor-skin' %>
<% end %>

<% content_for :custom_wrapper do %>
  <div class="page">
    <div class="page_title">
      <div class="icon"></div>
      <% if @page.new_record? %>
        <h2><%= t(:add_new_page) %></h2>
      <% else %>
        <h2><%= t(:edit_page) %></h2>
      <% end %>
      <%= flash_display %>
    </div>
    <div class="post_stuff">

      <% form_for [:admin,@page] do |form| %>
        <div id="sidebar">
          <%= render :partial => 'sidebar', :locals => {:form => form} %>
        </div>
        <div class="body_content">
          <div id="fields">
            <%= render :partial => 'fields', :locals => {:form => form} %>
          </div>
        </div>
      <% end %>
    </div>
  </div>

<% end %>

<% content_for :foot do %>
<%= javascript_include_tag "admin/yui-editor2.7.0", :cache => true %>
<script type="text/javascript">
  var Dom = YAHOO.util.Dom, Event = YAHOO.util.Event;
  var state = 'off';
  var PageEditor = null;

  $(document).ready( function() {
    PageEditor = setupEditor();
    enablePublishing();
    pageSlugAutoPopulateAndEdit();
  });

  function TitleWatch(page_title,url_slug) {
    if( $("#url_slug input").attr("value").length == 0 ) {
      this.firstBlur = false;
      var self = this;
      if( $(page_title).attr("value").length == 0 ) {
        try {
          $(page_title).focus( function(e, self) {
            console.log("focusing");
            this.firstBlur = true;
          });
          $(page_title).blur( function(e, self) {
            if( this.firstBlur )  {
              window.setTimeout(function(self) {
                var title = $(page_title).attr("value");
                $("#url_slug input").attr("value", title.replace(/\s/g,'-').toLowerCase() );
                $("#url_slug").show();
              },500);
            }
          });
        } catch( e ) {
          console.error(e);
        }
      }
    }
    else {
      console.log("url slug has some content already");
      // show the slug and it's controls
      $("#url_slug").show();
    }
  }

  function pageSlugAutoPopulateAndEdit()
  {
    new TitleWatch("#page_title", "#url_slug");
  }

  function enablePublishing() {
    // $("#page_publish").click(function(e) {
    //   e.preventDefault();
    //   sendForm("publish", 2);
    // });
    // $("#page_savedraft").click(function(e) {
    //   e.preventDefault();
    //   sendForm("savedraft", 0);
    // });
    // $("#page_preview").click(function(e) {
    //   e.preventDefault();
    //   alert("TODO: show preview");
    //   //sendForm("preview");
    // });
  }
  function sendForm(action,status) {
    if( state == 'off' ) {
      PageEditor.saveHTML();
    }
    var fields = $("#fields .body_content form").serialize();
    fields += "&do=" + action + "page%5Bstatus%5D=" + status;
    console.log(fields);
    var formAction = $("#fields form").attr("action");
    $.ajax({
      type: "POST",
      url: formAction,
      beforeSend: function (XMLHttpRequest) {
        XMLHttpRequest.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        XMLHttpRequest.setRequestHeader('Accept', 'text/javascript, text/html, application/xml, text/xml, */*');
      },
      data: fields,
      success: function(msg){
        window.location = msg;
      },
      error: function (XMLHttpRequest, textStatus, errorThrown) {
        alert("error: " + XMLHttpRequest.responseText);
      }
    });
  }

  function setupEditor() {
    var options = {
      autoHeight: true,
      filterWord: true,
      width: '100%',
      dompath: true, //Turns on the bar at the bottom
      handleSubmit: true,
      toolbar: {
        titlebar: null,
        collapse: true,
        buttons: [
          { group: 'textstyle',
            buttons: [
              { type: 'push', label: 'Bold', value: 'bold' },
              { type: 'push', label: 'Italic', value: 'italic' },
              { type: 'push', label: 'Underline', value: 'underline' },
              { type: 'separator' },
              { type: 'push', label: 'Link', value: 'createlink' },
              { type: 'push', label: 'Picker', value: 'insertimage' },
              { type: 'push', label: 'Edit HTML Code', value: 'editcode' },
              { type: 'separator' }
            ]
          }
        ]
      }
    };
    var editor = new YAHOO.widget.SimpleEditor('page_content', options);
    editor.on('toolbarLoaded', function() { 
      var codeConfig = {
          type: 'push', label: 'Edit HTML Code', value: 'editcode'
      };
      this.toolbar.on('editcodeClick', function() {

          var ta = this.get('element'),
              iframe = this.get('iframe').get('element');

          if (state == 'on') {
              state = 'off';
              this.toolbar.set('disabled', false);
              this.setEditorHTML(ta.value);
              if (!this.browser.ie) {
                  this._setDesignMode('on');
              }

              Dom.removeClass(iframe, 'editor-hidden');
              Dom.addClass(ta, 'editor-hidden');
              this.show();
              this._focusWindow();
          } else {
              state = 'on';
              this.cleanHTML();
              Dom.addClass(iframe, 'editor-hidden');
              Dom.removeClass(ta, 'editor-hidden');
              this.toolbar.set('disabled', true);
              this.toolbar.getButtonByValue('editcode').set('disabled', false);
              this.toolbar.selectButton('editcode');
              this.dompath.innerHTML = 'Editing HTML Code';
              this.hide();
          }
          return false;
      }, this, true);

      this.on('cleanHTML', function(ev) {
        this.get('element').value = ev.html;
      }, this, true);
      
      this.on('afterRender', function() {
        var wrapper = this.get('editor_wrapper');
        wrapper.appendChild(this.get('element'));
        
        this.setStyle('width', '100%');
        this.setStyle('height', '100%');
        this.setStyle('visibility', '');
        this.setStyle('top', '');
        this.setStyle('left', '');
        this.setStyle('position', '');

        this.addClass('editor-hidden');
        
      }, this, true);

/*
      this.toolbar.on('insertimageClick', function() {
        try  {
          $("#<%= id %>_picker_target").assetpicker({
            selected: function(event, asset) {
              $.getJSON(asset.path, function(data) {
                // switch(asset.basic_type) {
                //   case 'image':
                //     break;
                //   case 'flash':
                //     break;
                // }

                editor.execCommand('insertimage', asset.thumbPath); 
                
                // var html = $(editor.getEditorHTML()).find('img').each(function(){
                //   console.info(this);
                //   this.src = 'http://google.com'
                // });
                // console.info(html);
                
              });
            }
          });          
        } catch(e) {}
        return false;
      }, this, true);
*/
    });
    editor.render();
    return editor;
  };
</script>
<% end %>
